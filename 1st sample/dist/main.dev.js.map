{"version":3,"sources":["main.js"],"names":["form","document","getElementById","addEventListener","e","preventDefault","name","value","pass","alert","console","log","formInputs","querySelectorAll","forEach","input","target","id","checkBox","ul","querySelector","remove","myForm","nameInput","passInput","userList"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA,IAAMA,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAb,C,CAEA;;AAEAF,IAAI,CAACG,gBAAL,CAAsB,QAAtB,EAAgC,UAASC,CAAT,EAAY;AAC1CA,EAAAA,CAAC,CAACC,cAAF,GAD0C,CACtB;AAEpB;;AACA,MAAMC,IAAI,GAAGL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCK,KAA7C;AACA,MAAMC,IAAI,GAAGP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCK,KAA7C,CAL0C,CAO1C;;AACA,MAAGD,IAAI,KAAK,EAAT,IAAeE,IAAI,KAAK,EAA3B,EAA+B;AAC7BC,IAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkBE,IAAlB;AACD,CAdD,E,CAiBA;;AACA,IAAMI,UAAU,GAAGX,QAAQ,CAACY,gBAAT,CAA0B,aAA1B,CAAnB;AAEAD,UAAU,CAACE,OAAX,CAAmB,UAASC,KAAT,EAAgB;AACjCA,EAAAA,KAAK,CAACZ,gBAAN,CAAuB,MAAvB,EAA+B,UAASC,CAAT,EAAY;AACzCM,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACY,MAAF,CAASC,EAArB,EAAyB,gBAAzB;AACD,GAFD;AAGD,CAJD,E,CAMA;;AACA,IAAMC,QAAQ,GAAGjB,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAjB;AAKA;;;;;;AAQA;;AAEA,IAAMiB,EAAE,GAAGlB,QAAQ,CAACmB,aAAT,CAAuB,QAAvB,CAAX;AAEAD,EAAE,CAACE,MAAH,G,CAEA;;AACA;;;;;AAKA;;;;;AAKA;;;;;;;;AAQA,IAAMC,MAAM,GAAGrB,QAAQ,CAACmB,aAAT,CAAuB,UAAvB,CAAf;AACA,IAAMG,SAAS,GAAGtB,QAAQ,CAACmB,aAAT,CAAuB,OAAvB,CAAlB;AACA,IAAMI,SAAS,GAAGvB,QAAQ,CAACmB,aAAT,CAAuB,OAAvB,CAAlB;AACA,IAAMK,QAAQ,GAAExB,QAAQ,CAACmB,aAAT,CAAuB,QAAvB,CAAhB","sourcesContent":["/*\n// LOGGING OUTPUT\nalert('Hello World'); // Do not use for debugging. Stops script and only strings\nconsole.log('Hello World');\nconsole.error('This is an error');\nconsole.warn('This is a warning');\n\n\n// VARIABLES - var, let, const\nlet age = 30;\n\n// let can be re-assigned, const can not\nage = 31;\n\n\n// DATA TYPES - String, Number, Boolean, null, undefined\nconst name = 'Brad';\nconst age = 37;\nconst rating = 3.5;\nconst isCool = true;\nconst x = null;\nconst y = undefined;\nlet z; // undefined\n\n// Check type\nconsole.log(typeof z);\n\n\n// STRINGS\n\n// Concatenation\nconsole.log('My name is ' + name + ' and I am ' + age);\n// Template literal (better)\nconsole.log(`My name is ${name} and I am ${age}`);\n\n// String methods & properties\nconst s = 'Hello World';\nlet val;\n// Get length\nval = s.length;\n// Change case\nval = s.toUpperCase();\nval = s.toLowerCase();\n// Get sub string\nval = s.substring(0, 5);\n// Split into array\nval = s.split('');\n\n\n\n// ARRAYS - Store multiple values in a variable\nconst numbers = [1,2,3,4,5];\nconst fruits = ['apples', 'oranges', 'pears', 'grapes'];\nconsole.log(numbers, fruit);\n\n// Get one value - Arrays start at 0\nconsole.log(fruits[1]);\n\n// Add value\nfruits[4] = 'blueberries';\n\n// Add value using push()\nfruits.push('strawberries');\n\n// Add to beginning\nfruits.unshift('mangos');\n\n// Remove last value\nfruits.pop();\n\n// // Check if array\nconsole.log(Array.isArray(fruits));\n\n// // Get index\nconsole.log(fruits.indexOf('oranges'));\n\n\n\n// OBJECT LITERALS\nconst person = {\n  firstName: 'John',\n  age: 30,\n  hobbies: ['music', 'movies', 'sports'],\n  address: {\n    street: '50 Main st',\n    city: 'Boston',\n    state: 'MA'\n  }\n}\n\n// Get single value\nconsole.log(person.name)\n\n// Get array value\nconsole.log(person.hobbies[1]);\n\n// Get embedded object\nconsole.log(person.address.city);\n\n// Add property\nperson.email = 'jdoe@gmail.com';\n\n// Array of objects\nconst todos = [\n  {\n    id: 1,\n    text: 'Take out trash',\n    isComplete: false\n  },\n  {\n    id: 2,\n    text: 'Dinner with wife',\n    isComplete: false\n  },\n  {\n    id: 3,\n    text: 'Meeting with boss',\n    isComplete: true\n  }\n];\n\n// Get specific object value\nconsole.log(todos[1].text);\n\n// Format as JSON\nconsole.log(JSON.stringify(todos));\n\n\n// LOOPS\n\n// For\nfor(let i = 0; i <= 10; i++){\n  console.log(`For Loop Number: ${i}`);\n}\n\n// While\nlet i = 0\nwhile(i <= 10) {\n  console.log(`While Loop Number: ${i}`);\n  i++;\n}\n\n// Loop Through Arrays\n// For Loop\nfor(let i = 0; i < todos.length; i++){\n  console.log(` Todo ${i + 1}: ${todos[i].text}`);\n}\n\n// For...of Loop\nfor(let todo of todos) {\n  console.log(todo.text);\n}\n\n\n// HIGH ORDER ARRAY METHODS (show prototype)\n\n// forEach() - Loops through array\ntodos.forEach(function(todo, i, myTodos) {\n  console.log(`${i + 1}: ${todo.text}`);\n  console.log(myTodos);\n});\n\n// map() - Loop through and create new array\nconst todoTextArray = todos.map(function(todo) {\n  return todo.text;\n});\n\nconsole.log(todoTextArray);\n\n// filter() - Returns array based on condition\nconst todo1 = todos.filter(function(todo) {\n  // Return only todos where id is 1\n  return todo.id === 1; \n});\n\n\n// CONDITIONALS\n\n// Simple If/Else Statement\nconst x = 30;\n\nif(x === 10) {\n  console.log('x is 10');\n} else if(x > 10) {\n  console.log('x is greater than 10');\n} else {\n  console.log('x is less than 10')\n}\n\n// Switch\ncolor = 'blue';\n\nswitch(color) {\n  case 'red':\n    console.log('color is red');\n  case 'blue':\n    console.log('color is blue');\n  default:  \n    console.log('color is not red or blue')\n}\n\n// Ternary operator / Shorthand if\nconst z = color === 'red' ? 10 : 20;\n\n\n\n// FUNCTIONS\nfunction greet(greeting = 'Hello', name) {\n  if(!name) {\n    // console.log(greeting);\n    return greeting;\n  } else {\n    // console.log(`${greeting} ${name}`);\n    return `${greeting} ${name}`;\n  }\n}\n\n\n// ARROW FUNCTIONS\nconst greet = (greeting = 'Hello', name = 'There') => `${greeting} ${name}`;\nconsole.log(greet('Hi')); */\n\n\n/*\n// CLASSES\nfunction Person(firstName, lastName, dob) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.dob = new Date(dob);\n    this.getBirthYear = function(){\n        return this.dob.getFullYear();\n    }\n    this.getFullName = function(){\n        return `${this.firstName} ${this.lastName}`;\n    }\n}\n\n// Method 1\nPerson.prototype.getBirthYear = function(){\n    return this.dob.getFullYear();\n}\n\nPerson.prototype.getFullName = function(){\n    return `${this.firstName} ${this.lastName}`;\n}\n\n\n// Method 2: Using ES6 classes and methods\n// class\nclass person {\n    constructor(firstName, lastName, dob) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.dob = new Date(dob);\n    }\n\n    getBirthYear(){\n        return this.dob.getFullYear();\n    }\n\n    getFullName(){\n        return `${this.firstName} ${this.lastName}`;\n    }\n}\n\n// Instantiate an object\n\nconst person1 = new Person('John', 'Doe','4-3-1999');\n\nconsole.log(person1.getBirthYear()); // Output: 1999\n\n\nconsole.log(person1.getFullName()); // Output: John Doe\n\n*/\n\n\n// Single element\nconst form = document.getElementById('my-form');\n\n// Event listener \n\nform.addEventListener('submit', function(e) {\n  e.preventDefault(); // Prevent form from submitting\n\n  // Get values\n  const name = document.getElementById('name').value;\n  const pass = document.getElementById('pass').value;\n\n  // Validate form\n  if(name === '' || pass === '') {\n    alert('Please fill in all fields');\n    return;\n  }\n\n  console.log(name, pass);\n});\n\n\n// Multiple elements;\nconst formInputs = document.querySelectorAll('.form-input');\n\nformInputs.forEach(function(input) {\n  input.addEventListener('blur', function(e) {\n    console.log(e.target.id, 'has lost focus');\n  });\n});\n\n//checkbox\nconst checkBox = document.getElementById('remember-me');\n\n\n\n\n/*\nconst items = document.querySelectorAll('.item');\n\nitems.forEach(function(item) {\n  console.log(item);\n}); */\n\n\n// DOM Manipulation\n\nconst ul = document.querySelector('.items');\n\nul.remove();\n\n//ul.lastElementChild.remove();\n/*\nul.firstElementChild.textContent = 'Hello';\nul.children[1].innerText = 'World';\nul.lastElementChild.innerHTML = '<h2>Hello</h2>'; */\n\n/*\nconst btn = document.querySelector('.btn');\nbtn.style.background = 'transparent';\nbtn.style.color = 'white'; */\n\n/*\nconst btn = document.querySelector('.btn');\nbtn.addEventListener('click', (e) => {\n  e.preventDefault(); // Prevent form from submitting\n  document.querySelector('#js').style.background = '#000';\n});\n*/\n\nconst myForm = document.querySelector('#my-form');\nconst nameInput = document.querySelector('#name');\nconst passInput = document.querySelector('#pass');\nconst userList= document.querySelector('#users');\n\n\n\n\n"],"file":"main.dev.js"}